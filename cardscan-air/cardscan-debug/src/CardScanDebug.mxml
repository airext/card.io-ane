<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:local="*">

    <fx:Script>
        <![CDATA[
        import com.yuppablee.cardscan.CardScan;
        import com.yuppablee.cardscan.data.CardScanOptions;
        import com.yuppablee.cardscan.data.CreditCard;
        import com.yuppablee.cardscan.events.CardScanEvent;

        import spark.components.Alert;

        [Bindable]
        public var card:CreditCard;

        private function isSupported():void
        {
            Alert.show(String(CardScan.isSupported()));
        }

        private function libraryVersion():void
        {
            Alert.show(String(CardScan.libraryVersion));
        }

        private function scanForPayment():void
        {
            CardScan.getInstance().addEventListener(CardScanEvent.SCAN_COMPLETE,
                function(event:CardScanEvent):void
                {
                    card = event.info;

                    trace(event.info);
                });

            CardScan.getInstance().addEventListener(Event.CANCEL,
                function(event:Event):void
                {
                    trace("cancelled");
                });

            var options:CardScanOptions = new CardScanOptions();
            options.hideLogo = true;

            CardScan.getInstance().scanForPayment(options);

        }

        ]]>
    </fx:Script>

    <fx:Declarations>
        <fx:Component className="ScanForPaymentPopup">
            <s:SkinnablePopUpContainer verticalCenter="0" horizontalCenter="0">
                <fx:Script>
                    <![CDATA[
                    import com.yuppablee.cardscan.CardScan;
                    import com.yuppablee.cardscan.data.CardScanOptions;
                    import com.yuppablee.cardscan.events.CardScanEvent;

                    [Bindable]
                    private var options:CardScanOptions = new CardScanOptions();

                    private function scan():void
                    {
                        CardScan.getInstance().addEventListener(CardScanEvent.SCAN_COMPLETE,
                            function(event:CardScanEvent):void
                            {
                                close(false, event.info);
                            });

                        CardScan.getInstance().addEventListener(Event.CANCEL,
                            function(event:Event):void
                            {
                                close(false, null);
                            });

                        CardScan.getInstance().scanForPayment(options);
                    }

                    ]]>
                </fx:Script>
                <s:TitleWindow title="Scan for Payment" close="close()">
                    <s:VGroup width="100%">
                        <s:HGroup width="100%">
                            <s:Label width="20%" text="languageOrLocale" />
                            <s:TextInput text="{options.languageOrLocale}" change="options.languageOrLocale = event.target.text;" />
                        </s:HGroup>
                        <s:HGroup width="100%">
                            <s:Label width="20%" text="guideColor" />
                            <s:TextInput text="{options.guideColor ? options.guideColor.toString(16) : ''}" change="options.guideColor = parseInt(event.target.text, 16);" />
                        </s:HGroup>
                        <s:HGroup width="100%">
                            <s:Label width="20%" text="hideLogo" />
                            <s:CheckBox selected="{options.hideLogo}" change="options.hideLogo = event.target.selected;" />
                        </s:HGroup>
                        <s:Button label="Scan" click="scan();" />
                    </s:VGroup>
                </s:TitleWindow>
            </s:SkinnablePopUpContainer>
        </fx:Component>

    </fx:Declarations>

    <s:layout>
        <s:VerticalLayout horizontalAlign="justify" gap="30" paddingTop="30" />
    </s:layout>

    <s:Button label="Is Supported" click="isSupported();" />
    <s:Button label="Card.IO version" click="libraryVersion();" />
    <s:Button label="Scan for Payment" click="scanForPayment();" />

    <s:HGroup>
        <s:Label text="{card.cardType.getDisplayName('en_US')}" />
        <s:Image source="{card.cardType.logo}" />
    </s:HGroup>
    <s:TextInput width="100%" text="{card.cardNumber}" />
    <s:TextInput width="100%" text="{card.redactedCardNumber}" />
    <s:HGroup>
        <s:TextInput width="50%" text="{card.expiryMonth}/{card.expiryYear}" />
        <s:TextInput width="50%" text="{card.cvv}" />
    </s:HGroup>

</s:Application>
